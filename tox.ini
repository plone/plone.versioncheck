[tox]
envlist =
    py27,
    py33,
    py34,
    py35,
    py36,
    py37,
    pypy,
    lint-py27,
    lint-py36,
    lint-py37,
    coverage-report,

skip_missing_interpreters = False

[testenv]
usedevelop = True
extras =
    develop
    test
commands =
    pytest --cov=src --html=_build/reports/report-{envname}.html {posargs}
setenv =
  COVERAGE_FILE=.coverage.{envname}
deps =
    .[test]
    pdbpp
    pytest
    pytest-cov
    pytest-remove-stale-bytecode
    pytest-mock
    pytest-html
#    pytest-mypy

[testenv:coverage-report]
basepython = python2.7
deps = coverage
setenv =
  COVERAGE_FILE=.coverage
skip_install = true
commands =
    coverage erase
    coverage combine
    coverage report
    coverage html
    coverage xml

[testenv:isort-apply]
basepython = python3.6
skip_install = true
deps =
    isort

commands =
    isort --apply --recursive {toxinidir}/src {toxinidir}/tests {posargs}

[testenv:autopep8]
basepython = python3.6
skip_install = true
deps =
    autopep8
    docformatter

commands =
    autopep8 --verbose --in-place --recursive --aggressive --aggressive {toxinidir}/src {toxinidir}/tests setup.py
    docformatter --in-place --recursive {toxinidir}/src {toxinidir}/tests setup.py

[lint]
skip_install = true

deps =
    isort
    flake8
    # helper to generate HTML reports:
    flake8-html
    # Useful flake8 plugins that are Python and Plone specific:
    flake8-coding
    flake8-debugger
    flake8-deprecated
    flake8-pytest
    flake8-todo
    flake8-isort
    mccabe
    # Potential flake8 plugins that should be used:  # TBD
    #flake8-blind-except
    #flake8-commas
    #flake8-docstrings
    #flake8-mypy
    #flake8-pep3101
    #flake8-plone-hasattr
    #flake8-string-format
    #flake8_strict
    #flake8-quotes

commands =
    mkdir -p {toxinidir}/_build/reports/flake8
    isort --check-only --recursive {toxinidir}/src {toxinidir}/tests setup.py
    - flake8 --format=html --htmldir={toxinidir}/_build/reports/flake8 --doctests src tests setup.py
    flake8 src tests setup.py --doctests

whitelist_externals =
    mkdir

[testenv:lint-py27]
basepython = python2.7
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}

[testenv:lint-py36]
basepython = python3.6
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}

[testenv:lint-py37]
basepython = python3.7
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}

[testenv:docs]
deps =
    Sphinx

commands =
    python -V
    sphinx-build -b html -d _build/docs/doctrees docs _build/docs/html
    #sphinx-build -b doctest docs _build/docs/doctrees

[testenv:release]
skip_install = true
basepython = python3.6

deps =
    zest.releaser[recommended]

commands =
    python -V
    fullrelease --no-input -v
